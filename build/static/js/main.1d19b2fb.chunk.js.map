{"version":3,"sources":["containers/NotFound.js","components/LoaderButton.js","containers/Login.js","config.js","libs/awsLib.js","components/Popup.js","components/Sheet.js","containers/Sheets.js","containers/Home.js","containers/Signup.js","components/AuthenticatedRoute.js","components/UnauthenticatedRoute.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["containers_NotFound","react_default","a","createElement","className","components_LoaderButton","_ref","isLoading","text","loadingText","_ref$className","_ref$disabled","disabled","props","Object","objectWithoutProperties","Button","assign","concat","Glyphicon","glyph","Login","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","defineProperty","target","id","value","handleSubmit","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","preventDefault","Auth","signIn","state","email","password","userHasAuthenticated","history","push","t0","alert","message","stop","_x","apply","arguments","length","onSubmit","FormGroup","controlId","bsSize","ControlLabel","FormControl","autoFocus","type","onChange","block","validateForm","Component","config","MAX_ATTACHMENT_SIZE","s3","REGION","BUCKET","apiGateway","URL","cognito","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","s3Upload","_s3Upload","file","filename","stored","Date","now","name","Storage","vault","put","contentType","sent","abrupt","key","popups","color","style","textAlign","opacity","content","sheet","data","body","workoutDate","workoutTime","duration","maximumHeartRate","meanHeartRate","notes","Sheets","sheets","map","index","components_Sheet","React","NewNote","handleFileChange","files","getSheets","API","get","then","response","sheetsLoading","_ref2","_callee2","userId","params","_context2","size","console","log","currentUserCredentials","res","IdentityId","bucket","post","toConsumableArray","error","t1","document","getElementById","reset","showPopup","setTimeout","bind","assertThisInitialized","popup","components_Popup","marginTop","bsStyle","Sheets_Sheets","Signup","newUser","signUp","username","handleConfirmationSubmit","confirmSignUp","confirmationCode","_x2","confirmPassword","HelpBlock","validateConfirmationForm","renderForm","renderConfirmationForm","AuthenticatedRoute","C","component","cProps","rest","Route","render","isAuthenticated","Redirect","to","UnauthenticatedRoute","Routes","childProps","Switch","path","exact","Home","NotFound","App","authenticated","handleLogout","signOut","isAuthenticating","currentSession","Navbar","fluid","collapseOnSelect","Header","Brand","Link","Toggle","Collapse","Nav","pullRight","NavItem","onClick","react","react_router_bootstrap_lib","withRouter","Boolean","window","location","hostname","match","Amplify","configure","mandatorySignIn","region","userPoolId","identityPoolId","userPoolWebClientId","endpoints","endpoint","ReactDOM","BrowserRouter","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1d19b2fb.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./NotFound.css\";\n\nexport default () =>\n  <div className=\"NotFound\">\n    <h3>Sorry, page not found!</h3>\n  </div>;","import React from \"react\";\nimport { Button, Glyphicon } from \"react-bootstrap\";\nimport \"./LoaderButton.css\";\n\nexport default ({\n  isLoading,\n  text,\n  loadingText,\n  className = \"\",\n  disabled = false,\n  ...props\n}) =>\n  <Button\n    className={`LoaderButton ${className}`}\n    disabled={disabled || isLoading}\n    {...props}\n  >\n    {isLoading && <Glyphicon glyph=\"refresh\" className=\"spinning\" />}\n    {!isLoading ? text : loadingText}\n  </Button>;\n","import React, { Component } from \"react\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport \"./Login.css\";\nimport { Auth } from \"aws-amplify\";\nimport LoaderButton from \"../components/LoaderButton\";\n\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        isLoading: false,\n        email: \"\",\n        password: \"\"\n      };\n  }\n\n  validateForm() {\n    return this.state.email.length > 0 && this.state.password.length > 0;\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n  \n    this.setState({ isLoading: true });\n  \n    try {\n      await Auth.signIn(this.state.email, this.state.password);\n      this.props.userHasAuthenticated(true);\n      this.props.history.push(\"/\");\n    } catch (e) {\n      alert(e.message);\n      this.setState({ isLoading: false });\n    }\n  }\n  \n\n  render() {\n    return (\n      <div className=\"Login\">\n        \n        <form onSubmit={this.handleSubmit}>\n        <h2>Login</h2>\n          <FormGroup controlId=\"email\" bsSize=\"large\">\n            <ControlLabel>Email</ControlLabel>\n            <FormControl\n              autoFocus\n              type=\"email\"\n              value={this.state.email}\n              onChange={this.handleChange}\n            />\n          </FormGroup>\n          <FormGroup controlId=\"password\" bsSize=\"large\">\n            <ControlLabel>Password</ControlLabel>\n            <FormControl\n              value={this.state.password}\n              onChange={this.handleChange}\n              type=\"password\"\n            />\n          </FormGroup>\n          <LoaderButton\n  block\n  bsSize=\"large\"\n  disabled={!this.validateForm()}\n  type=\"submit\"\n  isLoading={this.state.isLoading}\n  text=\"Login\"\n  loadingText=\"Logging in…\"\n/>\n\n\n        </form>\n      </div>\n    );\n  }\n}\n","export default {\n    MAX_ATTACHMENT_SIZE: 5000000,\n\n    s3: {\n      REGION: \"us-east-1\",\n      BUCKET: \"excel-sheets-storage\"\n    },\n    apiGateway: {\n      REGION: \"us-east-1\",\n      URL: \"https://e1vbu6oai2.execute-api.us-east-1.amazonaws.com/test\"\n    },\n    cognito: {\n      REGION: \"us-east-1\",\n      USER_POOL_ID: \"us-east-1_B2ywZlmTC\",\n      APP_CLIENT_ID: \"2h8oid4vg85dmuqk8kai95brhe\",\n      IDENTITY_POOL_ID: \"us-east-1:beeb9d71-05e8-4859-b4ed-0da545d78c0f\"\n    }\n  };\n  ","import { Storage } from \"aws-amplify\";\n\nexport async function s3Upload(file) {\n  const filename = `${Date.now()}-${file.name}`;\n  //const filename = `${file.name}`;\n\n  const stored = await Storage.vault.put(filename, file, {\n    contentType: file.type\n  });\n\n  return stored.key;\n}\n","import React from 'react'\nimport './Popup.css'\n\nlet popups = props =>{\n    \n        return(\n                <div className = {\"popup-container \" + props.color}>\n                        <div style = {{textAlign: \"center\", opacity: 1}} className = \"content\">\n                        {props.content}\n                        </div>\n\n                </div>\n        \n        );\n    \n}\n\nexport default popups;","import React from 'react'\nimport \"./Sheet.css\"\n\nlet sheet = props =>{\n    //console.log(props.data.body);\n        return(\n                <div className = \"sheet\">\n                    <span className = \"left-block\">\n                    <span className = \"date\">Date: {props.data.body.workoutDate}</span>\n                    <span className = \"time\">Time: {props.data.body.workoutTime}\n                    </span>\n                    <br/>\n                    Duration: {props.data.body.duration}\n                    <br/>\n                    Maximum Heart Rate: {props.data.body.maximumHeartRate}\n                    <br/>\n                    Mean Heart Rate: {props.data.body.meanHeartRate}\n                    <br/>\n                    Notes: {props.data.body.notes}\n                \n                        </span>\n\n                        <span className = \"right-block\">\n                            <div className = \"graph\">Data</div>\n                        </span>\n\n                </div>\n        \n        );\n    \n}\n\nexport default sheet;","import React from \"react\";\nimport { Auth, API } from 'aws-amplify'\nimport Sheet from '../components/Sheet'\n\nexport default class Sheets extends React.Component{\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n            notes: null,\n            isLoading: true\n          };\n    }\n\n    /*async componentDidMount(){\n        if (!this.props.isAuthenticated) {\n            return;\n          }\n        \n          try {\n            const notes = await this.notes();\n            this.setState({ notes });\n          } catch (e) {\n            alert(e);\n          }\n        \n          this.setState({ isLoading: false });\n    }\n\n    notes = async () =>{\n      let userInfo = await Auth.currentUserInfo();\n      userInfo = JSON.stringify(userInfo)\n\n      let myInit = { // OPTIONAL\n          body: {  // OPTIONAL\n            //sup: \"bro\"\n        },\n        headers : {\n          //Authorization : \"suh\"\n        } // OPTIONAL\n    }\n        return API.get('sheets', '/').then(response => {\n          console.log(response)\n      })\n    }*/\n\n    render(){\n        //console.log(JSON.stringify(this.state.notes))\n        //console.log(this.props.sheets)\n        let sheets = \"There are no sheets uploaded\"\n        if(this.props.sheets != null){\n          sheets = this.props.sheets.map((sheet, index) =>{\n            return <Sheet\n                    data = {sheet}\n                    key = {index}\n                    id = {index}\n                    />\n            })\n        }\n        return(<div>{sheets}</div>);\n    }\n}","import React, { Component } from \"react\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport config from \"../config\";\nimport \"./Home.css\";\nimport { s3Upload } from \"../libs/awsLib\";\nimport Popup from '../components/Popup'\nimport { Auth, API } from 'aws-amplify';\nimport Sheets from './Sheets'\n\n\n\nexport default class NewNote extends Component {\n  constructor(props) {\n    super(props);\n\n    this.file = null;\n\n    this.state = {\n      isLoading: null,\n      file: null,\n      showPopup: false,\n      error: false,\n      sheets : null,\n      sheetsLoading: true\n    };\n  }\n\n  validateForm() {\n    if(this.state.file !== null && typeof(this.state.file) !== \"undefined\"){\n      return true;\n    }\n    return false;\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n\n  handleFileChange = event => {\n      this.file = event.target.files[0];\n      this.setState({file: event.target.files[0]})\n  }\n\n  async componentDidMount(){\n    this.getSheets()\n  }\n\n  getSheets = async () =>{\n    \n      //this.setState({ sheetsLoading: true });\n    \n    try {\n      let sheets;\n\n      await API.get('getSheets', '/').then(response => {\n        sheets = response\n    })\n      this.setState({ sheets });\n    } catch (e) {\n      alert(e);\n    }\n  \n    this.setState({ sheetsLoading: false });\n  }\n\n\n\n  handleSubmit = async event => {\n    event.preventDefault();\n  \n    if (this.file && this.file.size > config.MAX_ATTACHMENT_SIZE) {\n      alert(`Please pick a file smaller than ${config.MAX_ATTACHMENT_SIZE/1000000} MB.`);\n      return;\n    }\n  \n    this.setState({ isLoading: true });\n  \n    try {\n      let name;\n      let userId;\n\n      const attachment = this.file\n        ? await s3Upload(this.state.file).then(response => {\n          name = response\n          console.log(response)\n        })\n        : null;\n\n    \n        await Auth.currentUserCredentials().then(\n          res => {\n            userId = res.data.IdentityId\n            console.log(res.data.IdentityId)\n          }\n        )\n\n      const params = {\n        body: {\n          name,\n          bucket: \"excel-sheets-storage\",\n          userId\n        }\n      }\n      await API.post('postSheet', '/', params).then(response => {\n        console.log(response.body);\n        this.setState({ sheets: [...this.state.sheets, response.body] })\n      })\n\n      this.setState({isLoading: false, error: false})\n\n        //this.getSheets();\n        \n      //this.props.history.push(\"/\");\n    } catch (e) {\n      alert(e);\n      console.log(\"there was an error\")\n      this.setState({ isLoading: false, error: true});\n    }\n\n\n    document.getElementById('drop-form').reset();\n    this.setState({showPopup: true, file: null})\n    this.file = null;\n\n    // add a timer to popup\n    setTimeout(function(){\n      this.setState({showPopup:false});\n      }.bind(this),2500);\n    \n}\n  \n\n  \n\n\n  render() {\n\n    let popup;\n      \n      if(!this.state.error){\n        popup = <Popup\n          content = {\"File upload successful\"}\n          color = {\"green\"}\n          />\n      }\n      else{\n        popup = <Popup\n                    content = {\"There was an error in uploading the file\"}\n                    color = {\"red\"}\n                    />\n      }\n\n    return (\n      \n      <div className = \"upload-form\">\n        <form onSubmit={this.handleSubmit} id = \"drop-form\">\n        \n        <div className=\"file-drop-area\">\n        {this.state.showPopup ? popup : null}\n          <span className=\"fake-btn\" >Choose file</span>\n          <span className=\"file-msg\">{this.state.file === null || typeof(this.state.file) === \"undefined\"? \"or drag and drop files here\" : this.state.file.name}</span>\n          <input className=\"file-input\" type=\"file\" onChange={this.handleFileChange}/>\n        </div>\n\n        <LoaderButton\n      style = {{marginTop: \"7px\"}}\n            bsStyle=\"primary\"\n            bsSize=\"large\"\n            disabled={!this.validateForm()}\n            type=\"submit\"\n            isLoading={this.state.isLoading}\n            text=\"Submit\"\n            loadingText=\"Submitting…\"\n          />\n        </form>\n        {this.state.sheetsLoading ? <div className = 'loader'></div> : <Sheets sheets = {this.state.sheets} />}\n        \n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  HelpBlock,\n  FormGroup,\n  FormControl,\n  ControlLabel\n} from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { Auth } from \"aws-amplify\";\nimport \"./Signup.css\";\n\nexport default class Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: false,\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      confirmationCode: \"\",\n      newUser: null\n    };\n  }\n\n  validateForm() {\n    return (\n      this.state.email.length > 0 &&\n      this.state.password.length > 0 &&\n      this.state.password === this.state.confirmPassword\n    );\n  }\n\n  validateConfirmationForm() {\n    return this.state.confirmationCode.length > 0;\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n  \n    this.setState({ isLoading: true });\n  \n    try {\n      const newUser = await Auth.signUp({\n        username: this.state.email,\n        password: this.state.password\n      });\n      this.setState({\n        newUser\n      });\n    } catch (e) {\n      alert(e.message);\n    }\n  \n    this.setState({ isLoading: false });\n  }\n  \n  handleConfirmationSubmit = async event => {\n    event.preventDefault();\n  \n    this.setState({ isLoading: true });\n  \n    try {\n      await Auth.confirmSignUp(this.state.email, this.state.confirmationCode);\n      await Auth.signIn(this.state.email, this.state.password);\n  \n      this.props.userHasAuthenticated(true);\n      this.props.history.push(\"/\");\n    } catch (e) {\n      alert(e.message);\n      this.setState({ isLoading: false });\n    }\n  }\n  \n\n  renderConfirmationForm() {\n    return (\n      <form onSubmit={this.handleConfirmationSubmit}>\n        <FormGroup controlId=\"confirmationCode\" bsSize=\"large\">\n          <ControlLabel>Confirmation Code</ControlLabel>\n          <FormControl\n            autoFocus\n            type=\"tel\"\n            value={this.state.confirmationCode}\n            onChange={this.handleChange}\n          />\n          <HelpBlock>Please check your email for the code.</HelpBlock>\n        </FormGroup>\n        <LoaderButton\n          block\n          bsSize=\"large\"\n          disabled={!this.validateConfirmationForm()}\n          type=\"submit\"\n          isLoading={this.state.isLoading}\n          text=\"Verify\"\n          loadingText=\"Verifying…\"\n        />\n      </form>\n    );\n  }\n\n  renderForm() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n                <h2>Signup</h2>\n        <FormGroup controlId=\"email\" bsSize=\"large\">\n          <ControlLabel>Email</ControlLabel>\n          <FormControl\n            autoFocus\n            type=\"email\"\n            value={this.state.email}\n            onChange={this.handleChange}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"password\" bsSize=\"large\">\n          <ControlLabel>Password</ControlLabel>\n          <FormControl\n            value={this.state.password}\n            onChange={this.handleChange}\n            type=\"password\"\n          />\n        </FormGroup>\n        <FormGroup controlId=\"confirmPassword\" bsSize=\"large\">\n          <ControlLabel>Confirm Password</ControlLabel>\n          <FormControl\n            value={this.state.confirmPassword}\n            onChange={this.handleChange}\n            type=\"password\"\n          />\n        </FormGroup>\n        <LoaderButton\n          block\n          bsSize=\"large\"\n          disabled={!this.validateForm()}\n          type=\"submit\"\n          isLoading={this.state.isLoading}\n          text=\"Signup\"\n          loadingText=\"Signing up…\"\n        />\n      </form>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"Signup\">\n        {this.state.newUser === null\n          ? this.renderForm()\n          : this.renderConfirmationForm()}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport default ({ component: C, props: cProps, ...rest }) =>\n  <Route\n    {...rest}\n    render={props =>\n      cProps.isAuthenticated\n        ? <C {...props} {...cProps} />\n        : <Redirect\n            to={`/login`}\n          />}\n  />;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport default ({ component: C, props: cProps, ...rest }) =>\n  <Route\n    {...rest}\n    render={props =>\n      !cProps.isAuthenticated\n        ? <C {...props} {...cProps} />\n        : <Redirect to=\"/login\" />}\n  />;","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport NotFound from \"./containers/NotFound\";\nimport Login from './containers/Login'\nimport AppliedRoute from \"./components/AppliedRoute\";\nimport Home from \"./containers/Home\";\nimport Signup from \"./containers/Signup\";\nimport AuthenticatedRoute from \"./components/AuthenticatedRoute\";\nimport UnauthenticatedRoute from \"./components/UnauthenticatedRoute\";\n\n\nexport default ({ childProps }) =>\n  <Switch>\n    <UnauthenticatedRoute path=\"/login\" exact component={Login} props={childProps} />\n    <AuthenticatedRoute path=\"/\" exact component={Home} props={childProps} />\n    <UnauthenticatedRoute path=\"/signup\" exact component={Signup} props={childProps} />\n\n    { /* Finally, catch all unmatched routes */ }\n    <Route component={NotFound} />\n  </Switch>;","import React, { Fragment } from \"react\";\nimport './App.css';\nimport Routes from './Routes'\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Nav, NavItem, Navbar } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Auth } from \"aws-amplify\";\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  \n    this.state = {\n      isAuthenticated: false,\n      isAuthenticating: true\n    };\n    \n  }\n  \n  userHasAuthenticated = authenticated => {\n    this.setState({ isAuthenticated: authenticated });\n  }\n\n  handleLogout = async event => {\n    await Auth.signOut();\n  \n    this.userHasAuthenticated(false);\n    //this.props.history.push(\"/login\");\n\n  }\n  \n\n  async componentDidMount() {\n    try {\n      await Auth.currentSession();\n      this.userHasAuthenticated(true);\n    }\n    catch(e) {\n      if (e !== 'No current user') {\n        alert(e);\n      }\n    }\n  \n    this.setState({ isAuthenticating: false });\n  }\n  \n  render() {\n    const childProps = {\n      isAuthenticated: this.state.isAuthenticated,\n      userHasAuthenticated: this.userHasAuthenticated\n    };\n  \n    return (\n      !this.state.isAuthenticating &&\n      <div className=\"App container\">\n        <Navbar className = \"nbar\" fluid collapseOnSelect>\n          <Navbar.Header>\n            <Navbar.Brand>\n              <Link style = {{color: \"white\"}} to=\"/\">simplelogs</Link>\n            </Navbar.Brand>\n            <Navbar.Toggle />\n          </Navbar.Header>\n          <Navbar.Collapse>\n            <Nav pullRight>\n              {this.state.isAuthenticated\n                ? <NavItem onClick={this.handleLogout}>Logout</NavItem>\n                : <Fragment>\n                    <LinkContainer to=\"/signup\">\n                      <NavItem>Signup</NavItem>\n                    </LinkContainer>\n                    <LinkContainer to=\"/login\">\n                      <NavItem>Login</NavItem>\n                    </LinkContainer>\n                  </Fragment>\n              }\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <div  className = \"everything-else\" >\n        <Routes childProps={childProps} />\n        </div>\n        \n      </div>\n    );\n  }  \n  \n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Amplify from \"aws-amplify\";\nimport config from \"./config\";\n\nAmplify.configure({\n    Auth: {\n      mandatorySignIn: true,\n      region: config.cognito.REGION,\n      userPoolId: config.cognito.USER_POOL_ID,\n      identityPoolId: config.cognito.IDENTITY_POOL_ID,\n      userPoolWebClientId: config.cognito.APP_CLIENT_ID\n    },\n    Storage: {\n      region: config.s3.REGION,\n      bucket: config.s3.BUCKET,\n      identityPoolId: config.cognito.IDENTITY_POOL_ID\n    },\n    API: {\n      endpoints: [\n        {\n          name: 'getSheets',\n          endpoint: config.apiGateway.URL,\n          region: config.apiGateway.REGION\n        },\n        {\n          name: 'postSheet',\n          endpoint: 'https://ml7j1zkvo2.execute-api.us-east-1.amazonaws.com/test',\n          region: config.apiGateway.REGION\n        }\n      ]\n    }\n  });\n  \n\n\nReactDOM.render(<Router>\n    <App />\n  </Router>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}